"""
–¢–µ—Å—Ç –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É /api/reviews/external
"""
import requests
import json

API_URL = "http://localhost:8000"

# –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —É –≤–∞—à–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
test_data = {
    "reviews": [
        {
            "id": "review_001",
            "source": "appstore",
            "backlink": "https://apps.apple.com/review/001",
            "text": "–ö–æ—Ä–∏—Å—Ç—É—é—Å—è –≤–∂–µ –º—ñ—Å—è—Ü—å, –≤—Å–µ –ø—Ä–∞—Ü—é—î –≤—ñ–¥–º—ñ–Ω–Ω–æ. –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑—Ä—É—á–Ω–∏–π, —à–≤–∏–¥–∫–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è. –û—Å–æ–±–ª–∏–≤–æ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.",
            "rating": 5,
            "created_at": "2025-10-02T11:08:15.919438",
            "sentiment": "–ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π",
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–≤–∞–ª–∏—Ç—å –¥–æ–¥–∞—Ç–æ–∫ –∑–∞ –∑—Ä—É—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —à–≤–∏–¥–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.",
            "categories": ["—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å", "—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å"],
            "severity": "low",
            "is_processed": True
        },
        {
            "id": "review_002",
            "source": "googleplay",
            "backlink": "https://play.google.com/review/002",
            "text": "–ù–∞–º–∞–≥–∞—é—Å—è –æ–ø–ª–∞—Ç–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º –ø—ñ–¥–ø–∏—Å–∫—É, –∞–ª–µ –ø–æ—Å—Ç—ñ–π–Ω–æ –≤–∏–ª—ñ—Ç–∞—î –ø–æ–º–∏–ª–∫–∞. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –≤–∂–µ 3 –¥–Ω—ñ. –î—É–∂–µ —Ä–æ–∑—á–∞—Ä–æ–≤–∞–Ω–∏–π.",
            "rating": 1,
            "created_at": "2025-10-03T11:08:15.919438",
            "sentiment": "–Ω–µ–≥–∞—Ç–∏–≤–Ω–∏–π",
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–æ–∂–µ –æ–ø–ª–∞—Ç–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º –ø—ñ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ –ø–æ—Å—Ç—ñ–π–Ω—ñ –ø–æ–º–∏–ª–∫–∏ —ñ –Ω–µ –æ—Ç—Ä–∏–º—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.",
            "categories": ["–æ–ø–ª–∞—Ç–∞"],
            "severity": "critical",
            "is_processed": True
        },
        {
            "id": "review_003",
            "source": "trustpilot",
            "backlink": "https://trustpilot.com/review/003",
            "text": "–ó–∞–≥–∞–ª–æ–º –¥–æ–¥–∞—Ç–æ–∫ —Ä–æ–±–æ—á–∏–π. –Ñ –¥–µ—è–∫—ñ –±–∞–≥–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —ñ–Ω–æ–¥—ñ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—é—Ç—å—Å—è –¥–∞–Ω—ñ. –ê–ª–µ –≤ —Ü—ñ–ª–æ–º—É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—î –±–∞–∑–æ–≤—ñ –ø–æ—Ç—Ä–µ–±–∏.",
            "rating": 3,
            "created_at": "2025-10-03T23:08:15.919438",
            "sentiment": "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π",
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–∞–∂–∞—î –¥–æ–¥–∞—Ç–æ–∫ —Ä–æ–±–æ—á–∏–º, –∞–ª–µ –∑–∞–∑–Ω–∞—á–∞—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –±–∞–≥—ñ–≤, –∑–æ–∫—Ä–µ–º–∞ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é –¥–∞–Ω–∏—Ö.",
            "categories": ["—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å"],
            "severity": "medium",
            "is_processed": True
        }
    ],
    "count": 3
}


def test_external_reviews():
    """–¢–µ—Å—Ç –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É /api/reviews/external"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è /api/reviews/external")
    print("=" * 60)
    
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ health check
    print("\n1Ô∏è‚É£ Health check...")
    try:
        response = requests.get(f"{API_URL}/")
        print(f"   ‚úì API –¥–æ—Å—Ç—É–ø–Ω–∏–π: {response.json()}")
    except Exception as e:
        print(f"   ‚úó API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π: {e}")
        return
    
    # 2. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    print("\n2Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤...")
    print(f"   –í—ñ–¥–≥—É–∫—ñ–≤: {len(test_data['reviews'])}")
    print(f"   –§–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö:")
    print(f"   - source: {test_data['reviews'][0]['source']}")
    print(f"   - category (type): {type(test_data['reviews'][0]['category'])}")
    print(f"   - category (value): {test_data['reviews'][0]['category']}")
    print(f"   - severity: {test_data['reviews'][0]['severity']}")
    
    try:
        response = requests.post(
            f"{API_URL}/api/reviews/external",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"\n   Status Code: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"   ‚úì –£—Å–ø—ñ—Ö!")
            print(f"   –î–æ–¥–∞–Ω–æ: {result['added_count']} –≤—ñ–¥–≥—É–∫—ñ–≤")
            print(f"   IDs: {result['comment_ids'][:3]}...")
            return result
        else:
            print(f"   ‚úó –ü–æ–º–∏–ª–∫–∞!")
            print(f"   Response: {response.text}")
            return None
            
    except Exception as e:
        print(f"   ‚úó Exception: {e}")
        import traceback
        traceback.print_exc()
        return None


def test_statistics():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è"""
    print("\n3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    
    try:
        response = requests.get(f"{API_URL}/api/statistics")
        
        if response.status_code == 200:
            stats = response.json()
            print(f"   ‚úì –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞")
            print(f"   Total mentions: {stats['total_mentions']}")
            print(f"   Sentiment: {stats['sentiment_distribution']}")
            
            if 'severity_distribution' in stats:
                print(f"   Severity: {stats['severity_distribution']}")
            else:
                print(f"   ‚ö†Ô∏è  severity_distribution –≤—ñ–¥—Å—É—Ç–Ω—ñ–π!")
            
            print(f"   Top categories: {stats['top_categories'][:3]}")
        else:
            print(f"   ‚úó –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
            print(f"   {response.text}")
            
    except Exception as e:
        print(f"   ‚úó Exception: {e}")


def test_search():
    """–¢–µ—Å—Ç –ø–æ—à—É–∫—É"""
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ—à—É–∫—É...")
    
    try:
        response = requests.get(f"{API_URL}/api/search/comments?query=–æ–ø–ª–∞—Ç–∞&limit=5")
        
        if response.status_code == 200:
            results = response.json()
            print(f"   ‚úì –ó–Ω–∞–π–¥–µ–Ω–æ: {results['total']} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
            
            if results['results']:
                first = results['results'][0]
                print(f"   –ü–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
                print(f"   - Text: {first['text'][:60]}...")
                print(f"   - Category: {first.get('category')}")
                print(f"   - Severity: {first.get('severity')}")
        else:
            print(f"   ‚úó –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚úó Exception: {e}")


if __name__ == "__main__":
    print("\n" + "üéØ" * 30)
    print("–¢–ï–°–¢ –ï–ù–î–ü–û–Ü–ù–¢–£ /api/reviews/external")
    print("üéØ" * 30 + "\n")
    
    result = test_external_reviews()
    
    if result:
        test_statistics()
        test_search()
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–ï–°–¢–ò –ó–ê–í–ï–†–®–ï–ù–Ü")
        print("=" * 60)
    else:
        print("\n" + "=" * 60)
        print("‚ùå –¢–ï–°–¢–ò –ù–ï –ü–†–û–ô–î–ï–ù–Ü - –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞")
        print("=" * 60)
