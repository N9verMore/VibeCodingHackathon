import requests
from app.config import settings
import logging

logger = logging.getLogger(__name__)


class TelegramService:
    def __init__(self):
        self.bot_token = settings.TELEGRAM_BOT_TOKEN
        self.chat_id = settings.TELEGRAM_CHAT_ID
        self.base_url = f"https://api.telegram.org/bot{self.bot_token}"
    
    def send_message(self, text: str, parse_mode: str = "Markdown") -> bool:
        """–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram"""
        if not self.bot_token or not self.chat_id:
            logger.warning("Telegram bot not configured. Skipping notification.")
            return False
        
        url = f"{self.base_url}/sendMessage"
        payload = {
            "chat_id": self.chat_id,
            "text": text,
            "parse_mode": parse_mode
        }
        
        try:
            response = requests.post(url, json=payload, timeout=10)
            response.raise_for_status()
            logger.info(f"Telegram message sent successfully")
            return True
        except Exception as e:
            logger.error(f"Failed to send Telegram message: {str(e)}")
            return False
    
    def send_alert(self, alert_data: dict) -> bool:
        """–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∞–ª–µ—Ä—Ç –ø—Ä–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ñ –∑–≥–∞–¥–∫–∏"""
        
        brand = alert_data.get("brand_name", "Unknown")
        negative_count = alert_data.get("negative_count", 0)
        positive_count = alert_data.get("positive_count", 0)
        total_mentions = alert_data.get("total_mentions", 0)
        increase_ratio = alert_data.get("increase_ratio", 0)
        ai_summary = alert_data.get("ai_summary", "")
        top_issues = alert_data.get("top_issues", [])
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        message = f"""
üö® *ALERT: –ó–±—ñ–ª—å—à–µ–Ω–Ω—è –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏—Ö –∑–≥–∞–¥–æ–∫*

üì± *–ë—Ä–µ–Ω–¥:* {brand}
üìä *–ü–µ—Ä—ñ–æ–¥:* –û—Å—Ç–∞–Ω–Ω—ñ 2 –¥–Ω—ñ

*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –í—Å—å–æ–≥–æ –∑–≥–∞–¥—É–≤–∞–Ω—å: {total_mentions}
‚Ä¢ ‚ùå –ù–µ–≥–∞—Ç–∏–≤–Ω—ñ: {negative_count}
‚Ä¢ ‚úÖ –ü–æ–∑–∏—Ç–∏–≤–Ω—ñ: {positive_count}
‚Ä¢ üìà –ó—Ä–æ—Å—Ç–∞–Ω–Ω—è –Ω–µ–≥–∞—Ç–∏–≤—É: {increase_ratio:.1f}x

*ü§ñ AI –ê–Ω–∞–ª—ñ–∑:*
{ai_summary}

*‚ö†Ô∏è –¢–æ–ø –ø—Ä–æ–±–ª–µ–º–∏:*
"""
        
        for i, issue in enumerate(top_issues[:5], 1):
            message += f"{i}. {issue.get('category', 'Unknown')}: {issue.get('count', 0)} –∑–≥–∞–¥—É–≤–∞–Ω—å\n"
        
        message += f"\nüîó –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ –≤ dashboard"
        
        return self.send_message(message)


# Singleton
telegram_service = TelegramService()
